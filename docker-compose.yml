version: '3.8'
services:
  app1:
    container_name: app1
    restart: always
    env_file: './flask-adminator/.env'
    build: './flask-adminator'
    networks:
      - db_network
      - web_network
  app2:
    container_name: app2
    restart: always
    env_file: './flask-light-bootstrap/.env'
    build: './flask-light-bootstrap'
    networks:
      - db_network
      - web_network
  app3:
    container_name: app3
    restart: always
    env_file: './flask-material-dashboard/.env'
    build: './flask-material-dashboard'
    networks:
      - db_network
      - web_network
  app4:
    restart: always
    env_file: './flask-soft-ui-dashboard/.env'
    build: './flask-soft-ui-dashboard'
    deploy:
        replicas: 5
    networks:
      - db_network
      - web_network   
  app5:
    container_name: app5
    restart: always
    env_file: './flask-volt-dashboard/.env'
    build: './flask-volt-dashboard'
    networks:
      - db_network
      - web_network
  nginx:
    container_name: nginx
    restart: always
    image: "nginx:1.22.1-alpine-slim"
    ports:
      - "80:80"
      - "8000:8000"
      - "8001:8001"
      - "8002:8002"
      - "8003:8003"
    volumes:
      - ./nginx:/etc/nginx/conf.d
    networks:
      - web_network
    depends_on: 
      - app1
      - app2
      - app3
      - app4

networks:
  db_network:
    driver: bridge
  web_network:
    driver: bridge
 